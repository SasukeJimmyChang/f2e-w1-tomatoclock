{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\project\\\\f2e-w1-tomatoclock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\project\\\\f2e-w1-tomatoclock\\\\src\\\\components\\\\Timer\\\\index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 300px;\\n  color: #f05550;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nconst TimerWrapper = styled.h1(_templateObject());\n\nconst minutes = seconds => (seconds / 60).toFixed() + ' : ' + seconds % 60;\n\nclass Timer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.start = num => {\n      this.setState({\n        seconds: setInterval(num => num - 1, 1000)\n      });\n      console.log(num);\n    };\n\n    this.state = {\n      seconds: 1500\n    };\n  }\n\n  render() {\n    return React.createElement(TimerWrapper, {\n      onClick: this.start(this.state.seconds),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"TOMATO 25:00 \", minutes(this.state.seconds));\n  }\n\n}\n\n;\nexport default Timer;","map":{"version":3,"sources":["C:\\project\\f2e-w1-tomatoclock\\src\\components\\Timer\\index.js"],"names":["React","styled","TimerWrapper","h1","minutes","seconds","toFixed","Timer","PureComponent","constructor","props","start","num","setState","setInterval","console","log","state","render"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,EAAV,mBAAlB;;AAMA,MAAMC,OAAO,GAAGC,OAAO,IAAI,CAACA,OAAO,GAAG,EAAX,EAAeC,OAAf,KAA2B,KAA3B,GAAmCD,OAAO,GAAG,EAAxE;;AAEA,MAAME,KAAN,SAAoBP,KAAK,CAACQ,aAA1B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,KAPmB,GAOXC,GAAG,IAAI;AAIb,WAAKC,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAES,WAAW,CAACF,GAAG,IAAEA,GAAG,GAAC,CAAV,EAAY,IAAZ;AAArB,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,KAbkB;;AAEjB,SAAKK,KAAL,GAAa;AACXZ,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAUDa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAW,KAAKM,KAAL,CAAWZ,OAAtB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgBD,OAAO,CAAC,KAAKa,KAAL,CAAWZ,OAAZ,CADvB,CADF;AAKD;;AAtBqC;;AAuBvC;AACD,eAAeE,KAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TimerWrapper = styled.h1`\r\n  position: relative;\r\n  width: 300px;\r\n  color: #f05550;\r\n`;\r\n\r\nconst minutes = seconds => (seconds / 60).toFixed() + ' : ' + seconds % 60 ;\r\n\r\nclass Timer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 1500\r\n    };\r\n  }\r\n\r\n  start = num => {\r\n\r\n    \r\n\r\n    this.setState({seconds: setInterval(num=>num-1,1000)})\r\n    console.log(num)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TimerWrapper onClick={this.start(this.state.seconds)}>\r\n        TOMATO 25:00 {minutes(this.state.seconds)}\r\n      </TimerWrapper>\r\n    );\r\n  }\r\n};\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}