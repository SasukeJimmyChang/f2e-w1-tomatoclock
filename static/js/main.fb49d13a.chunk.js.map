{"version":3,"sources":["components/Buttons/Button.js","components/Buttons/FabButton.js","components/TestTool/index.js","components/Timer/index.js","components/Tomato/index.js","components/TakeBreak/index.js","components/MainMenu/index.js","containers/ChartContainer.js","containers/SettingContainer.js","containers/TodoListContainer.js","containers/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["ButtonBasic","styled","button","_templateObject","Button","_ref","children","onClick","hidden","props","Object","objectWithoutProperties","react_default","a","createElement","assign","FabButton_templateObject","FabButton","FabButton_ButtonBasic","TestToolWrapper","div","TestTool_templateObject","TestTool","onClick1","onClick2","Buttons_FabButton","TimerWrapper","h1","Timer_templateObject","Timer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","start","state","seconds","setState","takeBreak","backWork","done","onFinish","pause","setSeconds","intervalId","play","setInterval","clearInterval","console","log","_this2","components_TestTool","Math","floor","Buttons_Button","React","PureComponent","tomatoRoll","keyframes","Tomato_templateObject","TomatoBody","_templateObject2","Leaves","_templateObject3","Tomato","esm_extends","TakeBreakRoll","TakeBreak_templateObject","TakeBreakBody","TakeBreak_templateObject2","TakeBreak","Menu","MainMenu_templateObject","MenuItem","MainMenu_templateObject2","MainMenu","target","Chart","ChartContainer_templateObject","ChartContainer","SettingWrapper","SettingContainer_templateObject","SettingContainer","Todo","TodoListContainer_templateObject","TodoListContainer","Container","MainContainer_templateObject","MainContainer","working","onMainMenuClick","chartOpen","todoOpen","settingOpen","components_MainMenu","components_Tomato","components_TakeBreak","components_Timer","containers_TodoListContainer","containers_ChartContainer","containers_SettingContainer","App","containers_MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb49d13a.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonBasic = styled.button`\n  position: relative;\n  background-color: #f05550;\n  border: 2px solid #e04540;\n  border-radius: 1em;\n  color: white;\n  font-size: 1em;\n  padding: 0.25em 1em;\n  margin-top: 0.5em;\n  cursor: pointer;\n  :hover {\n    background-color: #ff6560;\n  }\n`;\n\nconst Button = ({ children, onClick, hidden, ...props }) => {\n  return (\n    <ButtonBasic onClick={onClick} hidden={hidden} {...props}>\n      {children}\n    </ButtonBasic>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonBasic = styled.button`\n  position: relative;\n  background-color: #f05550;\n  border: 2px solid #e04540;\n  border-radius: 1em;\n  color: white;\n  font-size: 1rem;\n  padding: 0.5em;\n  margin-top: 0.5em;\n  cursor: pointer;\n  :hover {\n    background-color: #ff6560;\n  }\n`;\n\nconst FabButton = ({ children, onClick, hidden, ...props }) => {\n  return (\n    <ButtonBasic onClick={onClick} hidden={hidden} {...props}>\n      {children}\n    </ButtonBasic>\n  );\n};\n\nexport default FabButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FabButton } from '../Buttons';\n\nconst TestToolWrapper = styled.div`\n  width: 100％;\n  color: white;\n  font-size: 1rem;\n`;\n\nconst TestTool = ({ children, onClick1, onClick2, hidden, ...props }) => {\n\n    return (\n      <TestToolWrapper>\n        測試\n        <FabButton onClick={onClick1}>3秒</FabButton>\n        <FabButton onClick={onClick2}>25分鐘</FabButton>\n      </TestToolWrapper>\n    );\n}\n\nexport default TestTool;\n","import React from 'react';\nimport styled from 'styled-components';\nimport TestTool from '../../components/TestTool';\nimport { Button } from '../Buttons';\n\nconst TimerWrapper = styled.h1`\n  position: relative;\n  width: 300px;\n  color: #f05550;\n`;\n\nconst minutes = seconds =>\n  Math.floor(seconds / 60) +\n  ' : ' +\n  (seconds % 60 < 10 ? '0' + (seconds % 60) : seconds % 60);\n\nclass Timer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 1500,\n      intervalId: '',\n      play: false,\n      takeBreak: false\n    };\n  }\n\n  start = () => {\n    this.state.seconds > 0\n      ? this.setState({ seconds: this.state.seconds - 1 })\n      : this.state.takeBreak ? this.backWork() : this.done();\n  };\n  done = () => {\n    const { onFinish } = this.props;\n    this.pause();\n    onFinish(true);\n    this.takeBreak();\n  };\n\n  backWork() {\n    this.setState({ seconds: 1500, takeBreak: false })\n    this.pause();\n    const { onFinish } = this.props;\n    onFinish(false);\n  }\n\n  play() {\n    let intervalId = setInterval(this.start, 1000);\n    this.setState({ intervalId: intervalId, play: true });\n  }\n\n  pause() {\n    clearInterval(this.state.intervalId);\n    this.setState({ play: false });\n  }\n  setSeconds = seconds => () => {\n    this.setState({ seconds });\n  };\n\n  takeBreak() {\n    this.setState({ seconds: 300, takeBreak: true });\n    console.log('takeBreak');\n    this.play();\n  }\n\n  render() {\n    return (\n      <TimerWrapper>\n        <TestTool\n          onClick1={this.setSeconds(3)}\n          onClick2={this.setSeconds(1500)}\n        />\n        {minutes(this.state.seconds)}\n        <Button\n          onClick={() => this.play()}\n          hidden={this.state.play ? true : false}\n        >\n          start\n        </Button>\n        <Button\n          onClick={() => this.pause()}\n          hidden={this.state.play ? false : true}\n        >\n          stop\n        </Button>\n      </TimerWrapper>\n    );\n  }\n}\nexport default Timer;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst tomatoRoll = keyframes`\n  to {\n    transform: scale(1.05, 0.95);\n  }\n`;\n\nconst TomatoBody = styled.div`\n  position: relative;\n  width: 300px;\n  height: 270px;\n  background-color: #f05550;\n  border: 10px solid #e04540;\n  border-width: 4px 8px 10px 4px;\n  border-radius: 90% 100%;\n  animation: ${tomatoRoll} 1s alternate infinite;\n  ::before {\n    content: '';\n    position: absolute;\n    width: 8%;\n    height: 9%;\n    top: 20%;\n    left: 12%;\n    border-radius: 100%;\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst Leaves = styled.div`\n  position: absolute;\n  width: 10%;\n  height: 40%;\n  top: -12%;\n  background-color: #50af33;\n  left: 45%;\n  border-radius: 10% 90%;\n  :nth-child(2) {\n    top: -6%;\n    left: 60%;\n    transform: rotate(70deg);\n  }\n\n  :nth-child(3) {\n    top: 8%;\n    left: 65%;\n    height: 40%;\n    transform: rotate(110deg);\n  }\n\n  :nth-child(4) {\n    top: 0%;\n    left: 35%;\n    height: 40%;\n    transform: rotate(120deg);\n  }\n\n  :nth-child(5) {\n    top: 22%;\n    left: 60%;\n    transform: rotate(150deg);\n  }\n`;\n\nconst Tomato = ({ ...props }) => {\n  return (\n    <TomatoBody {...props}>\n      <Leaves />\n      <Leaves />\n      <Leaves />\n      <Leaves />\n      <Leaves />\n    </TomatoBody>\n  );\n};\nexport default Tomato;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst TakeBreakRoll = keyframes`\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst TakeBreakBody = styled.div`\n  position: relative;\n  width: 200px;\n  height: 200px;\n  background-color: #50f0f0;\n  border: 10px solid #40e0e0;\n  border-width: 4px 8px 10px 4px;\n  border-radius: 90% 100%;\n  animation: ${TakeBreakRoll} 10s linear infinite;\n  ::before {\n    content: '';\n    position: absolute;\n    width: 8%;\n    height: 9%;\n    top: 20%;\n    left: 12%;\n    border-radius: 100%;\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  ::after {\n    content: 'TakeBreak...';\n    position: absolute;\n    top: -20%;\n    left: 25%;\n  }\n`;\n\nconst TakeBreak = ({ ...props }) => {\n  return (\n    <TakeBreakBody {...props}>\n    </TakeBreakBody>\n  );\n};\nexport default TakeBreak;\n","import React from 'react';\nimport styled from 'styled-components';\nimport FabButton from '../Buttons/FabButton';\n\nconst Menu = styled.div`\n  position: fixed;\n  bottom: 0;\n  padding: 24px;\n  z-index: 20;\n`;\n\nconst MenuItem = styled(FabButton)`\n  width: 100px;\n`;\n\nclass MainMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 1500,\n      intervalId: '',\n      play: false,\n      takeBreak: false\n    };\n  }\n\n  onClick = target => {\n    const { onClick } = this.props;\n    onClick(target);\n  };\n\n  render() {\n    return (\n      <Menu>\n        <MenuItem onClick={() => this.onClick('setting')}>setting</MenuItem>\n        <MenuItem onClick={() => this.onClick('chart')}>chart</MenuItem>\n        <MenuItem onClick={() => this.onClick('todo')}>todoList</MenuItem>\n        <MenuItem onClick={() => this.onClick('close')}>close</MenuItem>\n      </Menu>\n    );\n  }\n}\nexport default MainMenu;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Chart = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.3);\n  z-index: 10;\n`;\n\nclass ChartContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { ...props } = this.props;\n    return <Chart {...props}>ChartContainer</Chart>;\n  }\n}\n\nexport default ChartContainer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SettingWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.3);\n  z-index: 10;\n`;\n\nclass SettingContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { ...props } = this.props;\n    return <SettingWrapper {...props}>SettingContainer</SettingWrapper>;\n  }\n}\n\nexport default SettingContainer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Todo = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.3);\n  z-index: 10;\n`;\n\nclass TodoListContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { ...props } = this.props;\n    return <Todo {...props}>TodoListContainer</Todo>;\n  }\n}\n\nexport default TodoListContainer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Timer from '../components/Timer';\nimport Tomato from '../components/Tomato';\nimport TakeBreak from '../components/TakeBreak';\nimport MainMenu from '../components/MainMenu';\nimport ChartContainer from '../containers/ChartContainer';\nimport SettingContainer from '../containers/SettingContainer';\nimport TodoListContainer from '../containers/TodoListContainer';\n\nconst Container = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n  text-align: center;\n`;\n\nclass MainContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      takeBreak: false,\n      chartOpen: false,\n      todoOpen: false,\n      settingOpen: false\n    };\n  }\n  onFinish = working => {\n    console.log('Finish');\n    this.setState({ takeBreak: working });\n  };\n  onMainMenuClick = target => {\n    console.log(target);\n    switch (target) {\n      case 'chart':\n        return this.setState({\n          chartOpen: true,\n          todoOpen: false,\n          settingOpen: false\n        });\n      case 'todo':\n        return this.setState({\n          chartOpen: false,\n          todoOpen: true,\n          settingOpen: false\n        });\n      case 'setting':\n        return this.setState({\n          chartOpen: false,\n          todoOpen: false,\n          settingOpen: true\n        });\n      case 'close':\n        return this.setState({\n          chartOpen: false,\n          todoOpen: false,\n          settingOpen: false\n        });\n    }\n  };\n  render() {\n    return (\n      <Container>\n        <MainMenu onClick={this.onMainMenuClick} />\n        <Tomato hidden={this.state.takeBreak} />\n        <TakeBreak hidden={!this.state.takeBreak} />\n        <Timer onFinish={this.onFinish} />\n        <TodoListContainer hidden={!this.state.todoOpen} />\n        <ChartContainer hidden={!this.state.chartOpen} />\n        <SettingContainer hidden={!this.state.settingOpen} />\n      </Container>\n    );\n  }\n}\n\nexport default MainContainer;\n","import React from 'react';\nimport MainContainer from \"./containers/MainContainer\";\n\nfunction App() {\n  return (\n    <MainContainer />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}