{"version":3,"sources":["components/Buttons/Button.js","components/Buttons/FabButton.js","components/TestTool/index.js","components/Timer/index.js","components/Tomato/index.js","components/TakeBreak/index.js","components/MainMenu/index.js","containers/ChartContainer.js","containers/SettingContainer.js","containers/TodoListContainer.js","containers/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["ButtonBasic","styled","button","_templateObject","Button","_ref","children","onClick","hidden","props","Object","objectWithoutProperties","react_default","a","createElement","assign","FabButton_templateObject","FabButton","FabButton_ButtonBasic","TestToolWrapper","div","TestTool_templateObject","TestTool","onClick1","onClick2","Buttons_FabButton","TimerWrapper","h1","Timer_templateObject","Timer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","start","state","seconds","setState","takeBreak","backWork","done","onFinish","pause","setSeconds","intervalId","play","setInterval","clearInterval","console","log","_this2","components_TestTool","Math","floor","Buttons_Button","React","PureComponent","tomatoRoll","keyframes","Tomato_templateObject","TomatoBody","_templateObject2","Leaves","_templateObject3","Tomato","esm_extends","TakeBreakRoll","TakeBreak_templateObject","TakeBreakBody","TakeBreak_templateObject2","TakeBreak","Menu","MainMenu_templateObject","MenuItem","MainMenu_templateObject2","MainMenu","target","Chart","ChartContainer_templateObject","ChartContainer","SettingWrapper","SettingContainer_templateObject","SettingContainer","Todo","TodoListContainer_templateObject","TodoListContainer","Container","MainContainer_templateObject","MainContainer","working","onMainMenuClick","chartOpen","todoOpen","settingOpen","components_MainMenu","components_Tomato","components_TakeBreak","components_Timer","containers_TodoListContainer","containers_ChartContainer","containers_SettingContainer","App","containers_MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dffbb53b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonBasic = styled.button`\r\n  position: relative;\r\n  width: 300px;\r\n  background-color: #f05550;\r\n  border: 2px solid #e04540;\r\n  border-radius: 1em;\r\n  color: white;\r\n  font-size: 1em;\r\n  padding: 0.25em;\r\n  margin-top: 0.5em;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #ff6560;\r\n  }\r\n`;\r\n\r\nconst Button = ({ children, onClick, hidden, ...props }) => {\r\n  return (\r\n    <ButtonBasic onClick={onClick} hidden={hidden} {...props}>\r\n      {children}\r\n    </ButtonBasic>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonBasic = styled.button`\r\n  position: relative;\r\n  background-color: #f05550;\r\n  border: 2px solid #e04540;\r\n  border-radius: 1em;\r\n  color: white;\r\n  font-size: 1rem;\r\n  padding: 0.25em;\r\n  margin-top: 0.5em;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #ff6560;\r\n  }\r\n`;\r\n\r\nconst FabButton = ({ children, onClick, hidden, ...props }) => {\r\n  return (\r\n    <ButtonBasic onClick={onClick} hidden={hidden} {...props}>\r\n      {children}\r\n    </ButtonBasic>\r\n  );\r\n};\r\n\r\nexport default FabButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FabButton } from '../Buttons';\r\n\r\nconst TestToolWrapper = styled.div`\r\n  width: 100％;\r\n  color: white;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst TestTool = ({ children, onClick1, onClick2, hidden, ...props }) => {\r\n\r\n    return (\r\n      <TestToolWrapper>\r\n        測試\r\n        <FabButton onClick={onClick1}>3秒</FabButton>\r\n        <FabButton onClick={onClick2}>25分鐘</FabButton>\r\n      </TestToolWrapper>\r\n    );\r\n}\r\n\r\nexport default TestTool;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TestTool from '../../components/TestTool';\r\nimport { Button } from '../Buttons';\r\n\r\nconst TimerWrapper = styled.h1`\r\n  position: relative;\r\n  width: 300px;\r\n  color: #f05550;\r\n`;\r\n\r\nconst minutes = seconds =>\r\n  Math.floor(seconds / 60) +\r\n  ' : ' +\r\n  (seconds % 60 < 10 ? '0' + (seconds % 60) : seconds % 60);\r\n\r\nclass Timer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 1500,\r\n      intervalId: '',\r\n      play: false,\r\n      takeBreak: false\r\n    };\r\n  }\r\n\r\n  start = () => {\r\n    this.state.seconds > 0\r\n      ? this.setState({ seconds: this.state.seconds - 1 })\r\n      : this.state.takeBreak ? this.backWork() : this.done();\r\n  };\r\n  done = () => {\r\n    const { onFinish } = this.props;\r\n    this.pause();\r\n    onFinish(true);\r\n    this.takeBreak();\r\n  };\r\n\r\n  backWork() {\r\n    this.setState({ seconds: 1500, takeBreak: false })\r\n    this.pause();\r\n    const { onFinish } = this.props;\r\n    onFinish(false);\r\n  }\r\n\r\n  play() {\r\n    let intervalId = setInterval(this.start, 1000);\r\n    this.setState({ intervalId: intervalId, play: true });\r\n  }\r\n\r\n  pause() {\r\n    clearInterval(this.state.intervalId);\r\n    this.setState({ play: false });\r\n  }\r\n  setSeconds = seconds => () => {\r\n    this.setState({ seconds });\r\n  };\r\n\r\n  takeBreak() {\r\n    this.setState({ seconds: 300, takeBreak: true });\r\n    console.log('takeBreak');\r\n    this.play();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TimerWrapper>\r\n        <TestTool\r\n          onClick1={this.setSeconds(3)}\r\n          onClick2={this.setSeconds(1500)}\r\n        />\r\n        {minutes(this.state.seconds)}\r\n        <Button\r\n          onClick={() => this.play()}\r\n          hidden={this.state.play ? true : false}\r\n        >\r\n          start\r\n        </Button>\r\n        <Button\r\n          onClick={() => this.pause()}\r\n          hidden={this.state.play ? false : true}\r\n        >\r\n          stop\r\n        </Button>\r\n      </TimerWrapper>\r\n    );\r\n  }\r\n}\r\nexport default Timer;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst tomatoRoll = keyframes`\r\n  to {\r\n    transform: scale(1.05, 0.95);\r\n  }\r\n`;\r\n\r\nconst TomatoBody = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  height: 270px;\r\n  background-color: #f05550;\r\n  border: 10px solid #e04540;\r\n  border-width: 4px 8px 10px 4px;\r\n  border-radius: 90% 100%;\r\n  animation: ${tomatoRoll} 1s alternate infinite;\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 8%;\r\n    height: 9%;\r\n    top: 20%;\r\n    left: 12%;\r\n    border-radius: 100%;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\n\r\nconst Leaves = styled.div`\r\n  position: absolute;\r\n  width: 10%;\r\n  height: 40%;\r\n  top: -12%;\r\n  background-color: #50af33;\r\n  left: 45%;\r\n  border-radius: 10% 90%;\r\n  :nth-child(2) {\r\n    top: -6%;\r\n    left: 60%;\r\n    transform: rotate(70deg);\r\n  }\r\n\r\n  :nth-child(3) {\r\n    top: 8%;\r\n    left: 65%;\r\n    height: 40%;\r\n    transform: rotate(110deg);\r\n  }\r\n\r\n  :nth-child(4) {\r\n    top: 0%;\r\n    left: 35%;\r\n    height: 40%;\r\n    transform: rotate(120deg);\r\n  }\r\n\r\n  :nth-child(5) {\r\n    top: 22%;\r\n    left: 60%;\r\n    transform: rotate(150deg);\r\n  }\r\n`;\r\n\r\nconst Tomato = ({ ...props }) => {\r\n  return (\r\n    <TomatoBody {...props}>\r\n      <Leaves />\r\n      <Leaves />\r\n      <Leaves />\r\n      <Leaves />\r\n      <Leaves />\r\n    </TomatoBody>\r\n  );\r\n};\r\nexport default Tomato;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst TakeBreakRoll = keyframes`\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst TakeBreakBody = styled.div`\r\n  position: relative;\r\n  width: 200px;\r\n  height: 200px;\r\n  background-color: #50f0f0;\r\n  border: 10px solid #40e0e0;\r\n  border-width: 4px 8px 10px 4px;\r\n  border-radius: 90% 100%;\r\n  animation: ${TakeBreakRoll} 10s linear infinite;\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 8%;\r\n    height: 9%;\r\n    top: 20%;\r\n    left: 12%;\r\n    border-radius: 100%;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  ::after {\r\n    content: 'TakeBreak...';\r\n    position: absolute;\r\n    top: -20%;\r\n    left: 25%;\r\n  }\r\n`;\r\n\r\nconst TakeBreak = ({ ...props }) => {\r\n  return (\r\n    <TakeBreakBody {...props}>\r\n    </TakeBreakBody>\r\n  );\r\n};\r\nexport default TakeBreak;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Buttons/Button'\r\n\r\nconst Menu = styled.div`\r\n  {\r\n    position: fixed;\r\n   bottom: 0;\r\n   padding: 24px;\r\n   z-index: 20;\r\n  }\r\n`;\r\n\r\nconst MenuItem = styled(Button)`\r\n{\r\n  width: 200px;\r\n}\r\n`;\r\n\r\nclass MainMenu extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 1500,\r\n      intervalId: '',\r\n      play: false,\r\n      takeBreak: false\r\n    };\r\n  }\r\n\r\n  onClick = (target) => {\r\n    const { onClick } = this.props;\r\n    onClick(target)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Menu>\r\n        <MenuItem onClick={() => this.onClick('setting')}>setting</MenuItem>\r\n        <MenuItem onClick={() => this.onClick('chart')}>chart</MenuItem>\r\n        <MenuItem onClick={() => this.onClick('todo')}>todoList</MenuItem>\r\n        <MenuItem onClick={() => this.onClick('close')}>close</MenuItem>\r\n      </Menu>\r\n    );\r\n  }\r\n};\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Chart = styled.div`\r\n   {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width:100%;\r\n    height: 100%;\r\n    background-color: rgba(255,255,255,0.3);\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nclass ChartContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n    const { ...props } = this.props;\r\n    return (\r\n      <Chart {...props}>ChartContainer</Chart>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SettingWrapper = styled.div`\r\n   {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width:100%;\r\n    height: 100%;\r\n    background-color: rgba(255,255,255,0.3);\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nclass SettingContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n    const { ...props } = this.props;\r\n    return (\r\n      <SettingWrapper {...props}>SettingContainer</SettingWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Todo = styled.div`\r\n   {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width:100%;\r\n    height: 100%;\r\n    background-color: rgba(255,255,255,0.3);\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nclass TodoListContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n    const { ...props } = this.props;\r\n    return (\r\n      <Todo {...props}>TodoListContainer</Todo>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoListContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Timer from '../components/Timer';\r\nimport Tomato from '../components/Tomato';\r\nimport TakeBreak from '../components/TakeBreak';\r\nimport MainMenu from '../components/MainMenu';\r\nimport ChartContainer from '../containers/ChartContainer';\r\nimport SettingContainer from '../containers/SettingContainer';\r\nimport TodoListContainer from '../containers/TodoListContainer';\r\n\r\nconst Container = styled.div`\r\n   {\r\n    background-color: #282c34;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: calc(10px + 2vmin);\r\n    color: white;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nclass MainContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      takeBreak: false,\r\n      chartOpen: false,\r\n      todoOpen: false,\r\n      settingOpen: false\r\n    };\r\n  }\r\n  onFinish = (working) => {\r\n    console.log('Finish');\r\n    this.setState({ takeBreak: working });\r\n  };\r\n  onMainMenuClick = (target) => {\r\n    switch (target) {\r\n      case 'chart':\r\n        return this.setState({\r\n          chartOpen: true,\r\n          todoOpen: false,\r\n          settingOpen: false\r\n        });\r\n      case 'todo':\r\n        return this.setState({\r\n          chartOpen: false,\r\n          todoOpen: true,\r\n          settingOpen: false\r\n        });\r\n      case 'setting':\r\n        return this.setState({\r\n          chartOpen: false,\r\n          todoOpen: false,\r\n          settingOpen: true\r\n        });\r\n      case 'close':\r\n        return this.setState({\r\n          chartOpen: false,\r\n          todoOpen: false,\r\n          settingOpen: false\r\n        });\r\n\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <MainMenu onClick={this.onMainMenuClick} />\r\n        <Tomato hidden={this.state.takeBreak} />\r\n        <TakeBreak hidden={!this.state.takeBreak} />\r\n        <Timer onFinish={this.onFinish} />\r\n        <TodoListContainer hidden={!this.state.todoOpen} />\r\n        <ChartContainer hidden={!this.state.chartOpen} />\r\n        <SettingContainer hidden={!this.state.settingOpen} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport MainContainer from \"./containers/MainContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <MainContainer />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}