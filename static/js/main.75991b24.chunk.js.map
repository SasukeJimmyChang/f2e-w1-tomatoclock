{"version":3,"sources":["components/Buttons/Button.js","components/Buttons/FabButton.js","components/Icons/index.js","components/Timer/index.js","components/Tomato/index.js","components/TakeBreak/index.js","components/MainMenu/index.js","containers/ChartContainer.js","containers/SettingContainer.js","containers/TodoListContainer.js","containers/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["ButtonBasic","styled","button","_templateObject","Button","_ref","children","onClick","hidden","props","Object","objectWithoutProperties","react_default","a","createElement","assign","FabButton_templateObject","small","FabButton","FabButton_ButtonBasic","Icon","div","Icons_templateObject","iconType","typeName","color","concat","defaultIconType","AniIcon","_ref$color","_ref$type","type","TimerWrapper","Timer_templateObject","TimerClock","h1","_templateObject2","Timer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","start","state","seconds","setState","takeBreak","backWork","done","onFinish","pause","setSeconds","intervalId","play","iconTypePlay","iconTypeDelete","iconTypeStop","setInterval","clearInterval","console","log","_this2","Math","floor","Buttons_FabButton","onStopBtnClick","Icons","onBtnClick","onDeleteBtnClick","React","PureComponent","tomatoRoll","keyframes","Tomato_templateObject","TomatoBody","Tomato_templateObject2","Leaves","_templateObject3","TaskNow","_templateObject4","textLen","Tomato","text","length","TakeBreakRoll","TakeBreak_templateObject","TakeBreakBody","TakeBreak_templateObject2","TakeBreak","esm_extends","Menu","MainMenu_templateObject","MenuItem","MainMenu_templateObject2","MainMenu","target","Chart","ChartContainer_templateObject","ChartContainer","SettingWrapper","SettingContainer_templateObject","SettingContainer","Todo","TodoListContainer_templateObject","TodoListContainer","Container","MainContainer_templateObject","MainContainer","working","onMainMenuClick","chartOpen","todoOpen","settingOpen","components_MainMenu","components_Tomato","components_TakeBreak","components_Timer","containers_TodoListContainer","containers_ChartContainer","containers_SettingContainer","App","containers_MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75991b24.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonBasic = styled.button`\r\n  position: relative;\r\n  width: 300px;\r\n  background-color: #f05550;\r\n  border: 2px solid #e04540;\r\n  border-radius: 1em;\r\n  color: white;\r\n  font-size: 1em;\r\n  padding: 0.25em;\r\n  margin-top: 0.5em;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #ff6560;\r\n  }\r\n`;\r\n\r\nconst Button = ({ children, onClick, hidden, ...props }) => {\r\n  return (\r\n    <ButtonBasic onClick={onClick} hidden={hidden} {...props}>\r\n      {children}\r\n    </ButtonBasic>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonBasic = styled.button`\r\n  position: relative;\r\n  background-color: #f05550;\r\n  border: 2px solid #e04540;\r\n  border-radius: 100%;\r\n  color: white;\r\n  font-size: ${props=>props.small?'.75em':'1em'};\r\n  padding: ${props=>props.small?'.75em':'1em'};\r\n  margin: 0.5em;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #ff6560;\r\n  }\r\n`;\r\n\r\nconst FabButton = ({ children, onClick, hidden, small, ...props }) => {\r\n  return (\r\n    <ButtonBasic onClick={onClick} hidden={hidden} small={small} {...props}>\r\n      {children}\r\n    </ButtonBasic>\r\n  );\r\n};\r\n\r\nexport default FabButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Icon = styled.div`\r\n  position: relative;\r\n  width: 2em;\r\n  height: 2em;\r\n  background-color: transparent;\r\n  ${props => props.iconType}\r\n`;\r\n\r\nconst iconType = (typeName, color) => {\r\n  switch (typeName) {\r\n    case 'play':\r\n      return `\r\n        &::before,&::after {\r\n          ${defaultIconType}\r\n          left: 30%;\r\n          border: 1em solid transparent;\r\n          border-left-width: 1.2em;\r\n          border-right-width: 0;\r\n          border-left-color: ${color};\r\n        }\r\n      `\r\n    case 'pause':\r\n      return `\r\n        &::before,&::after {\r\n          ${defaultIconType}\r\n          height: 90%;\r\n          width: 30%;\r\n          top: 5%;\r\n          left: 5%;\r\n          background-color: ${color};\r\n        }\r\n        &::after {\r\n          left: 65%;\r\n        }\r\n      `\r\n      case 'restart':\r\n        return `\r\n          &::before,&::after {\r\n            ${defaultIconType}\r\n            border: 0.2em solid ${color};\r\n            border-bottom-color: transparent;\r\n            border-radius: 100%;\r\n          }\r\n          &::after {\r\n            top: 45%;\r\n            left: 20%;\r\n            border: 1em solid transparent;\r\n            border-left-color: ${color};\r\n            transform: rotate(135deg) scale(0.5);\r\n          }\r\n        `\r\n      case 'stop':\r\n        return `\r\n          &::before,&::after {\r\n            ${defaultIconType}\r\n            width: 60%;\r\n            height: 60%;\r\n            top: 20%;\r\n            left: 20%;\r\n            background-color: ${color};\r\n          }\r\n        `\r\n      case 'delete':\r\n        return `\r\n          &::before,&::after {\r\n            ${defaultIconType}\r\n            width: 20%;\r\n            left: 40%;\r\n            transform: rotate(45deg);\r\n            background-color: ${color};\r\n          }\r\n          &::after {\r\n            transform: rotate(-45deg);\r\n          }\r\n        `\r\n    default:\r\n      return `\r\n          &::before,&::after {\r\n            ${defaultIconType}\r\n            width: 70%;\r\n            height: 70%;\r\n            top: 15%;\r\n            left: 15%;\r\n            border-radius: 100%;\r\n            background-color: ${color};\r\n          }\r\n        `\r\n  }\r\n  \r\n};\r\n\r\nconst defaultIconType = `\r\n  content: \"\";\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: inherit;\r\n  right: inherit;\r\n  background: transparent;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-radius: 0;\r\n  transform: none;\r\n  transition: 0.2s ease-in-out;\r\n`;\r\n\r\nconst AniIcon = ({ color = 'white', type = 'play', hidden, ...props }) => {\r\n  \r\n  return (\r\n    <Icon color={color} typeName={type} hidden={hidden} iconType={iconType(type, color)} {...props} />\r\n  );\r\n};\r\n\r\nexport default AniIcon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FabButton } from '../Buttons';\r\nimport AniIcon from '../../components/Icons';\r\n\r\nconst TimerWrapper = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  color: #f05550;\r\n`;\r\n\r\nconst TimerClock = styled.h1`\r\n  position: relative;\r\n  width: 100%;\r\n  color: #f05550;\r\n`;\r\n\r\nconst minutes = seconds =>\r\n  Math.floor(seconds / 60) +\r\n  ' : ' +\r\n  (seconds % 60 < 10 ? '0' + (seconds % 60) : seconds % 60);\r\n\r\nclass Timer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 1500,\r\n      intervalId: '',\r\n      play: false,\r\n      takeBreak: false,\r\n      iconTypePlay: 'play',\r\n      iconTypeDelete: 'delete',\r\n      iconTypeStop: 'stop',\r\n    };\r\n  }\r\n\r\n  start = () => {\r\n    this.state.seconds > 0\r\n      ? this.setState({ seconds: this.state.seconds - 1 })\r\n      : this.state.takeBreak ? this.backWork() : this.done();\r\n  };\r\n  done = () => {\r\n    const { onFinish } = this.props;\r\n    this.pause();\r\n    onFinish(true);\r\n    this.takeBreak();\r\n  };\r\n\r\n  backWork() {\r\n    this.setState({ seconds: 1500, takeBreak: false, iconTypeStop: 'stop' })\r\n    this.pause();\r\n    const { onFinish } = this.props;\r\n    onFinish(false);\r\n  }\r\n\r\n  play() {\r\n    let intervalId = setInterval(this.start, 1000);\r\n    this.setState({ intervalId: intervalId, play: true, iconTypePlay: 'pause' });\r\n  }\r\n\r\n  pause() {\r\n    clearInterval(this.state.intervalId);\r\n    this.setState({ play: false, iconTypePlay: 'play' });\r\n  }\r\n  setSeconds = seconds => () => {\r\n    this.setState({ seconds });\r\n  };\r\n\r\n  takeBreak() {\r\n    this.setState({ seconds: 300, takeBreak: true, iconTypeStop: 'stop' });\r\n    console.log('takeBreak');\r\n    this.play();\r\n  }\r\n\r\n  onBtnClick() {\r\n    this.state.play ? this.pause() : this.play();\r\n  }\r\n\r\n  onDeleteBtnClick() {\r\n    console.log('onDeleteBtnClick');\r\n  }\r\n\r\n  onStopBtnClick() {\r\n    this.state.iconTypeStop === 'stop' ? this.setState({ seconds: 0, iconTypeStop: 'restart' }) : this.setState({ seconds: this.state.takeBreak ? 300 : 1500, iconTypeStop: 'stop' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TimerWrapper>\r\n        <TimerClock>{minutes(this.state.seconds)}</TimerClock>\r\n        <FabButton onClick={() => this.onStopBtnClick()} small>\r\n          <AniIcon type={this.state.iconTypeStop} />\r\n        </FabButton>\r\n        <FabButton onClick={() => this.onBtnClick()}>\r\n          <AniIcon type={this.state.iconTypePlay} />\r\n        </FabButton>\r\n        <FabButton onClick={() => this.onDeleteBtnClick()} small>\r\n          <AniIcon type={this.state.iconTypeDelete} />\r\n        </FabButton>\r\n      </TimerWrapper>\r\n    );\r\n  }\r\n}\r\nexport default Timer;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst tomatoRoll = keyframes`\r\n  to {\r\n    transform: scale(1.05, 0.95);\r\n  }\r\n`;\r\n\r\nconst TomatoBody = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 300px;\r\n  height: 270px;\r\n  background-color: #f05550;\r\n  border: 10px solid #e04540;\r\n  border-width: 4px 8px 10px 4px;\r\n  border-radius: 90% 100%;\r\n  animation: ${tomatoRoll} 1s alternate infinite;\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 8%;\r\n    height: 9%;\r\n    top: 20%;\r\n    left: 12%;\r\n    border-radius: 100%;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\n\r\nconst Leaves = styled.div`\r\n  position: absolute;\r\n  width: 10%;\r\n  height: 40%;\r\n  top: -12%;\r\n  background-color: #50af33;\r\n  left: 45%;\r\n  border-radius: 10% 90%;\r\n  :nth-child(2) {\r\n    top: -6%;\r\n    left: 60%;\r\n    transform: rotate(70deg);\r\n  }\r\n\r\n  :nth-child(3) {\r\n    top: 8%;\r\n    left: 65%;\r\n    height: 40%;\r\n    transform: rotate(110deg);\r\n  }\r\n\r\n  :nth-child(4) {\r\n    top: 0%;\r\n    left: 35%;\r\n    height: 40%;\r\n    transform: rotate(120deg);\r\n  }\r\n\r\n  :nth-child(5) {\r\n    top: 22%;\r\n    left: 60%;\r\n    transform: rotate(150deg);\r\n  }\r\n`;\r\n\r\nconst TaskNow = styled.div`\r\n  position: relative;\r\n  font-size: ${props=>props.textLen>20?'1em':'1.5em'};\r\n`;\r\n\r\nconst Tomato = ({ text, ...props }) => {\r\n  return (\r\n    <TomatoBody {...props}>\r\n      <Leaves />\r\n      <Leaves />\r\n      <Leaves />\r\n      <Leaves />\r\n      <Leaves />\r\n      <TaskNow textLen={text.length}>{text}</TaskNow>\r\n    </TomatoBody>\r\n  );\r\n};\r\nexport default Tomato;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst TakeBreakRoll = keyframes`\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst TakeBreakBody = styled.div`\r\n  position: relative;\r\n  width: 200px;\r\n  height: 200px;\r\n  background-color: #50f0f0;\r\n  border: 10px solid #40e0e0;\r\n  border-width: 4px 8px 10px 4px;\r\n  border-radius: 90% 100%;\r\n  animation: ${TakeBreakRoll} 10s linear infinite;\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 8%;\r\n    height: 9%;\r\n    top: 20%;\r\n    left: 12%;\r\n    border-radius: 100%;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  ::after {\r\n    content: 'TakeBreak...';\r\n    position: absolute;\r\n    top: -20%;\r\n    left: 25%;\r\n  }\r\n`;\r\n\r\nconst TakeBreak = ({ ...props }) => {\r\n  return (\r\n    <TakeBreakBody {...props}>\r\n    </TakeBreakBody>\r\n  );\r\n};\r\nexport default TakeBreak;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Buttons/Button'\r\n\r\nconst Menu = styled.div`\r\n  {\r\n    position: fixed;\r\n   bottom: 0;\r\n   padding: 24px;\r\n   z-index: 20;\r\n  }\r\n`;\r\n\r\nconst MenuItem = styled(Button)`\r\n{\r\n  width: 200px;\r\n}\r\n`;\r\n\r\nclass MainMenu extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 1500,\r\n      intervalId: '',\r\n      play: false,\r\n      takeBreak: false\r\n    };\r\n  }\r\n\r\n  onClick = (target) => {\r\n    const { onClick } = this.props;\r\n    onClick(target)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Menu>\r\n        <MenuItem onClick={() => this.onClick('setting')}>setting</MenuItem>\r\n        <MenuItem onClick={() => this.onClick('chart')}>chart</MenuItem>\r\n        <MenuItem onClick={() => this.onClick('todo')}>todoList</MenuItem>\r\n        <MenuItem onClick={() => this.onClick('close')}>close</MenuItem>\r\n      </Menu>\r\n    );\r\n  }\r\n};\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Chart = styled.div`\r\n   {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width:100%;\r\n    height: 100%;\r\n    background-color: rgba(255,255,255,0.3);\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nclass ChartContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n    const { ...props } = this.props;\r\n    return (\r\n      <Chart {...props}>ChartContainer</Chart>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SettingWrapper = styled.div`\r\n   {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width:100%;\r\n    height: 100%;\r\n    background-color: rgba(255,255,255,0.3);\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nclass SettingContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n    const { ...props } = this.props;\r\n    return (\r\n      <SettingWrapper {...props}>SettingContainer</SettingWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Todo = styled.div`\r\n   {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width:100%;\r\n    height: 100%;\r\n    background-color: rgba(255,255,255,0.3);\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nclass TodoListContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n    const { ...props } = this.props;\r\n    return (\r\n      <Todo {...props}>TodoListContainer</Todo>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoListContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Timer from '../components/Timer';\r\nimport Tomato from '../components/Tomato';\r\nimport TakeBreak from '../components/TakeBreak';\r\nimport MainMenu from '../components/MainMenu';\r\nimport ChartContainer from '../containers/ChartContainer';\r\nimport SettingContainer from '../containers/SettingContainer';\r\nimport TodoListContainer from '../containers/TodoListContainer';\r\n\r\nconst Container = styled.div`\r\n   {\r\n    background-color: #282c34;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: calc(10px + 2vmin);\r\n    color: white;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nclass MainContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      takeBreak: false,\r\n      chartOpen: false,\r\n      todoOpen: false,\r\n      settingOpen: false\r\n    };\r\n  }\r\n  onFinish = (working) => {\r\n    console.log('Finish');\r\n    this.setState({ takeBreak: working });\r\n  };\r\n  onMainMenuClick = (target) => {\r\n    switch (target) {\r\n      case 'chart':\r\n        return this.setState({\r\n          chartOpen: true,\r\n          todoOpen: false,\r\n          settingOpen: false\r\n        });\r\n      case 'todo':\r\n        return this.setState({\r\n          chartOpen: false,\r\n          todoOpen: true,\r\n          settingOpen: false\r\n        });\r\n      case 'setting':\r\n        return this.setState({\r\n          chartOpen: false,\r\n          todoOpen: false,\r\n          settingOpen: true\r\n        });\r\n      case 'close':\r\n        return this.setState({\r\n          chartOpen: false,\r\n          todoOpen: false,\r\n          settingOpen: false\r\n        });\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <MainMenu onClick={this.onMainMenuClick} />\r\n        <Tomato text={'task 1 textcontent'} hidden={this.state.takeBreak} />\r\n        <TakeBreak hidden={!this.state.takeBreak} />\r\n        <Timer onFinish={this.onFinish} />\r\n        <TodoListContainer hidden={!this.state.todoOpen} />\r\n        <ChartContainer hidden={!this.state.chartOpen} />\r\n        <SettingContainer hidden={!this.state.settingOpen} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport MainContainer from \"./containers/MainContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <MainContainer />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}